name: Android CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Flutter # Cette action exporte FLUTTER_ROOT comme variable d'environnement
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # ou 'beta', 'dev' selon vos besoins

      # --- AJOUT DE L'ÉTAPE DE DÉBOGAGE POUR FLUTTER_ROOT ---
      - name: Debug FLUTTER_ROOT value
        run: |
          echo "Value of FLUTTER_ROOT (from env): $FLUTTER_ROOT"
          if [ -z "$FLUTTER_ROOT" ]; then
            echo "ERROR: FLUTTER_ROOT is empty or not set. Build will likely fail."
            exit 1 # Arrête le workflow ici si FLUTTER_ROOT est vide
          fi
      # --- FIN DE L'ÉTAPE DE DÉBOGAGE ---

      - name: Create local.properties
        run: |
          set -euxo pipefail # Cela garantit que la commande échouera si l'une des sous-commandes échoue
          echo "sdk.dir=${{ runner.tool_cache }}/android/sdk" > "$GITHUB_WORKSPACE/android/local.properties"
          # Utilisation de la variable d'environnement FLUTTER_ROOT qui devrait être définie par l'action 'Setup Flutter'
          echo "flutter.sdk=$FLUTTER_ROOT" >> "$GITHUB_WORKSPACE/android/local.properties"
        # Pas de working-directory ici car nous utilisons des chemins absolus avec $GITHUB_WORKSPACE

      # --- AJOUT DE L'ÉTAPE DE VÉRIFICATION DE local.properties ---
      - name: Verify local.properties content
        run: cat "$GITHUB_WORKSPACE/android/local.properties"
      # --- FIN DE L'ÉTAPE DE VÉRIFICATION ---

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./android

      - name: Build release APK
        run: ./gradlew assembleRelease --stacktrace --info
        working-directory: ./android
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/app/my-release-key.jks
          KEYSTORE_PASSWORD: votre_mot_de_passe_keystore
          KEY_ALIAS: votre_alias_de_cle
          KEY_PASSWORD: votre_mot_de_passe_cle

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
