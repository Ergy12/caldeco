name: Android CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # Ajoutez cette étape pour configurer Flutter et obtenir son chemin
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # ou 'beta', 'dev' selon vos besoins
        id: flutter-path # C'est important d'avoir cet ID pour récupérer le chemin

      - name: Create local.properties # Cette étape est cruciale pour le SDK Android et Flutter
        run: |
          echo "sdk.dir=${{ runner.tool_cache }}/android/sdk" > "$GITHUB_WORKSPACE/android/local.properties"
          echo "flutter.sdk=${{ steps.flutter-path.outputs.flutter-directory }}" >> "$GITHUB_WORKSPACE/android/local.properties"
        # Pas besoin d'env ici car on utilise directement la sortie d'une étape précédente

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./android

      - name: Build release APK
        run: ./gradlew assembleRelease --stacktrace --info
        working-directory: ./android
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/app/my-release-key.jks
          KEYSTORE_PASSWORD: votre_mot_de_passe_keystore
          KEY_ALIAS: votre_alias_de_cle
          KEY_PASSWORD: votre_mot_de_passe_cle

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
