name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java Development Kit
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # Il est recommandé de spécifier une version exacte de Flutter pour des builds reproductibles.
          # Vérifiez votre version locale avec `flutter --version` et mettez-la ici.
          # Par exemple:
          # flutter-version: '3.22.2'

      - name: Get Flutter dependencies
        run: flutter pub get
        # Assurez-vous que le répertoire de travail est la racine de votre projet Flutter.
        # Si votre pubspec.yaml est dans un sous-dossier (ex: 'my_app/'), changez '.' par 'my_app/'.
        working-directory: ./ 

      - name: Verify package_config.json exists
        run: ls -l ./.dart_tool/package_config.json || true
        working-directory: ./ 
      
      - name: Create local.properties for Android SDK and Flutter SDK paths
        # CETTE ÉTAPE A ÉTÉ MISE À JOUR
        run: |
          echo "sdk.dir=$ANDROID_HOME" > android/local.properties
          echo "flutter.sdk=$FLUTTER_ROOT" >> android/local.properties
        working-directory: ./ 

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
        working-directory: ./android

      - name: Build Android Release APK
        run: ./gradlew assembleRelease --stacktrace --info
        working-directory: ./android
        env:
          ORG_GRADLE_PROJECT_KEY_STORE_FILE: ${{ secrets.KEY_STORE_FILE }}
          ORG_GRADLE_PROJECT_KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          ORG_GRADLE_PROJECT_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          ORG_GRADLE_PROJECT_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
